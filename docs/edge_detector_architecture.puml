@startuml
' Add a title
title Edge Detection System - Class Diagram

' Simple color scheme
skinparam classBackgroundColor lightblue
skinparam classBorderColor black
skinparam classFontSize 12

' Image class
class Image {
  - data: vector<uint8_t>
  - width: int
  - height: int
  - channels: int
  __
  + Image(data, width, height, channels)
  + {static} loadFromFile(filepath: string): Image
  + saveToFile(filepath: string): void
  + toGrayscale(): Image
  + getWidth(): int
  + getHeight(): int
  + getChannels(): int
  + getData(): const vector<uint8_t>&
}

' EdgeDetector class
class EdgeDetector {
  - {static} SOBEL_X[3][3]: int
  - {static} SOBEL_Y[3][3]: int
  - {static} PREWITT_X[3][3]: int
  - {static} PREWITT_Y[3][3]: int
  __
  + {static} detectEdges(image: Image, operatorName: string): Image
  - {static} createPaddedImage(data, width, height, padSize): vector<uint8_t>
  - {static} applyKernel(data, width, x, y, kernel): int
  - {static} calculateMagnitude(gx, gy): uint8_t
}

' Relationship
EdgeDetector ..> Image : uses

' Notes
note right of Image
  Handles image data and I/O
  - Loads images using STB library
  - Converts to grayscale
  - Saves results as PNG
end note

note left of EdgeDetector
  Implements edge detection
  - Sobel operator
  - Prewitt operator
  - Handles padding for borders
end note

@enduml